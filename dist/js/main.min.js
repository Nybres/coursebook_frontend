"use strict";addEventListener("DOMContentLoaded",function(e){function o(e){e.classList.add("overlay--active"),document.body.classList.add("no-scroll")}var t,n,r,c=!1,a=document.querySelectorAll(".alert"),s=(a&&a.forEach(function(e){setTimeout(function(){e.classList.add("alert__hide")},2e3)}),document.querySelector(".drawer")),i=(s&&(t=document.querySelector(".overlay"),a=document.querySelector(".jsAccountAdd"),n=s.querySelector(".drawer__back"),a.addEventListener("click",function(){s.classList.add("drawer--active"),o(t),c=!1}),n.addEventListener("click",function(){s.classList.remove("drawer--active"),t.classList.remove("overlay--active"),document.body.classList.remove("no-scroll")})),document.querySelector(".nav")),l=(i&&window.addEventListener("scroll",function(){148<window.scrollY?i.classList.add("nav--shadow"):i.classList.remove("nav--shadow")}),document.querySelector(".jsCourseForm")),d=(l&&l.addEventListener("submit",function(e){e.preventDefault();var r=new FormData(l),e=(l.querySelectorAll('input[type="file"]').forEach(function(e){for(var t=e.files,o=0;o<t.length;o++){var n=t[o];r.append("uploaded_images",n)}}),r.get("csrfmiddlewaretoken"));fetch("/account-courses",{method:"POST",headers:{"X-CSRFToken":e},body:r}).then(function(e){console.log(e),e.ok,location.reload()}).catch(function(e){console.log(e)})}),document.querySelector(".jsInstructorForm"));document.querySelectorAll(".jsInstructorEdit").forEach(function(t){t.addEventListener("click",function(e){c=!0,r=t.dataset.id,fetch("/edit-instructor/"+r,{method:"GET"}).then(function(e){return e.json()}).then(function(e){var t=document.querySelector(".overlay");o(t),s.classList.add("drawer--active"),d.querySelector("[name='first_name']").value=e.first_name,d.querySelector("[name='last_name']").value=e.last_name,d.querySelector("[name='description']").value=e.description,e.photo&&(d.querySelector(".photo-preview").src=e.photo_thumb)})})}),d&&d.addEventListener("submit",function(e){e.preventDefault();var e=new FormData(d),t=e.get("csrfmiddlewaretoken");fetch(c?"/edit-instructor/"+r:"/account-instructors",{method:c?"PUT":"POST",headers:{"X-CSRFToken":t},body:e}).then(function(e){d.reset(),console.log(e),e.ok,location.reload()}).catch(function(e){console.log(e)})}),document.querySelectorAll(".form__images-image").forEach(function(n){n.addEventListener("change",function(e){var t=n.querySelector("input"),o=n.querySelector("span");0<t.files.length?o.textContent="".concat(t.files[0].name):o.textContent="Wybierz zdjÄ™cie"})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
